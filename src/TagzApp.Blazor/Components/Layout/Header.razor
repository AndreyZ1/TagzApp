@using Microsoft.AspNetCore.Authorization;
@using TagzApp.Blazor.Components.Account
@inject IAuthorizationService AuthorizationService
@inject ApplicationConfiguration AppConfiguration


<header>
	<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light border-bottom box-shadow mb-3 bg-body">
		<div class="container">
			<a class="navbar-brand" href="/">@AppConfiguration.SiteName</a>

			@if (ConfigureTagzAppFactory.IsConfigured)
			{
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
								aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
				</button>
				<div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
					<ul class="navbar-nav flex-grow-1">

						<li class="nav-item">
							<NavLink class="nav-link" href="/Waterfall">Waterfall</NavLink>
						</li>

						@if (AppConfiguration.ModerationEnabled)
						{
							<AuthorizeView Policy="@RolesAndPolicies.Policy.Moderator">
								<li class="nav-item">
									<a class="nav-link" asp-area="" asp-page="/Moderation">Moderation</a>
								</li>
								<li class="nav-item">
									<a class="nav-link" asp-area="" asp-page="/BlockedUsers">Blocked Users</a>
								</li>
							</AuthorizeView>
						}
						<li class="nav-item">
							<a class="nav-link" target="_blank" href="/Overlay">Overlay</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" target="_blank" href="/PortraitOverlay">Portrait Overlay</a>
						</li>
					</ul>

					<LoginView />

				</div>
			}

		</div>
	</nav>
</header>
@code {

	[CascadingParameter]
	private HttpContext HttpContext { get; set; } = default!;

}